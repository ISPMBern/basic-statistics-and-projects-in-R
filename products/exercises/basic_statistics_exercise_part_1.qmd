---
title: "Exercises 08.06, morning"
author: "Eleftheria Michalopoulou, Ben Spycher"

toc: true # create table of contents
toc-depth: 4  # number of section levels to include in the table of contents
toc-location: left # location of the table of contents
format: 
  html:
    self-contained: true # the resulting file needs no external files and no net access to be displayed properly by a browser
    code-link: true # enables hyper-linking of functions within code blocks to their online        documentation
    code-fold: true # display code chunks 
    code-overflow: scroll # scroll left to see the full code
number-sections: false # do not allow automatic numbering of sections
theme:
  light: flatly
  dark: darkly
---

These are the exercises for the [Basic Statistics and Projects in R](https://zuw.me/kurse/dt.php?kid=4474) course of the [Public Health Sciences Course Program](https://www.medizin.unibe.ch/studies/study_programs/phs_course_program) at the [University of Bern](https://www.unibe.ch/).

<!-- Some set ups -->

```{r setup, include = FALSE, echo = FALSE}

# Set language
Sys.setenv(LANG = "en")

# Clear memory
rm(list = ls())

# Set non-scientific notation and do not allow conversion of strings to factors
# with the data import
options(scipen = 999, stringsAsFactors = FALSE)

```

<!-- Libraries -->

```{r libraries, include = FALSE, echo = FALSE, warning = FALSE, message = FALSE}

# Load libraries riskCommunicator and TH.data ..................................
# * Below we install the package if not already installed

library_names <- c("riskCommunicator", "TH.data", "tidyverse")

lapply(library_names, function(x) {
  if (!require(x, character.only = TRUE)) {
    install.packages(x)
    library(x, character.only = TRUE)
  }
})

```

# Inference for means

## Data description and import

In exercises 1-4, we will use data from the Framingham heart study, available in package [riskCommunicator](https://cran.r-project.org/web/packages/riskCommunicator/riskCommunicator.pdf). The Framingham heart study started in 1948 and was the first prospective study about the etiology of cardiovascular disease. The participants were members of the community of Framingham in Massachusetts. The aim of the study was to collect clinical data and review the occurrence of cardiovascular events, such as myocardial infarction and heart failure. Here, we will only use data of the baseline examination of 4,434 participants. For more information and relevant references type `?framingham`.

In exercise 5, we will use data collected by the German Breast Cancer Study Group, available in package [TH.data](https://cran.r-project.org/web/packages/TH.data/TH.data.pdf). The German breast cancer study was a multicenter randomized clinical trial including patients with primary node positive breast cancer. The aim of the study was to investigate the effectiveness of three versus six cycles of chemotherapy and of additional hormonal therapy. Here, we will only use data of of 686 women that had complete information on the variables included in the dataset. For more information and relevant references type `?GBSG2`.


First read in the data and get an overview of the of the number and types of variables and the number of observations

```{r dataImport}
###
# Framingham heart study data
framData <- riskCommunicator::framingham

# We keep only the baseline examination data
framData_base <- subset(framData, TIME == 0)

# Numbers of rows and columns / show first rows and variables
head(framData_base)

###
# German Breast Cancer Study
breastCancer <- tibble(TH.data::GBSG2) 
# tibble wouldn't be necessary, GBSG2 is a dataframe in the package
# for consistency let's turn it into a tibble (tidyverse data frame)

# Numbers of rows and columns / show first rows and variables
head(breastCancer)

```

## Exercise 1

We would like to explore the heart rate (ventricular rate in beats/min) of the participants, given in variable `HEARTRTE`.

#### 1.1. Descriptive statistics

Calculate the following descriptive statistics for heart rate, manually and using R-functions: sample mean, median, quartiles, sample variance, sample standard deviation, range, interquartile range (IQR).
Quartiles and IQR are tricky to calculate manually, you can simply use the R functions for these.

```{r summStats}
# Sample mean ------------------------------------------------------------------

## Manually ....................................................................

# For the mean we need the sum and the number of observations
sum(framData_base$HEARTRTE)
# We get an NA
# This is a sign that there are missing values in the variable. Often basic commands in R will not simply throw missings out unless told so. This is a safety feature that helps us be aware of missings

# let's see how many missings
sum(is.na(framData_base$HEARTRTE))

#   below, we have to specify the argument na.rm =  TRUE to drop missing values
## * Keep in mind that the NAs have to be dropped from the nominator as well as
##   from the denominator)

sum(framData_base$HEARTRTE, na.rm = TRUE) / 
  sum(!is.na(framData_base$HEARTRTE))


## R-function ..................................................................

mean_hr <- mean(framData_base$HEARTRTE, na.rm =  TRUE)
mean_hr 


# Median -----------------------------------------------------------------------

## Manually ....................................................................

sorted_hr <- sort(framData_base$HEARTRTE)

sum(is.na(sorted_hr)) #  NAs dropped by sorting
# Check the syntax of sort (?sort), there is also the possibilit of keeping NAs

# Check if n is odd or even
length(sorted_hr) # odd
# We need to extract the (n+1)/2 th value
middle_hr <- (length(sorted_hr) + 1) / 2
# Our median
sorted_hr[middle_hr] 

## R-function ..................................................................

median_hr <- median(framData_base$HEARTRTE, na.rm =  TRUE) 
median_hr


# Quartiles --------------------------------------------------------------------


## R-function ..................................................................

quart_hr <- quantile(framData_base$HEARTRTE, probs = c(0.25, 0.5, 0.75),
                     na.rm = TRUE)
quart_hr


# Sample variance --------------------------------------------------------------

## Manually ....................................................................
## * Keep in mind that the NAs have to be dropped from the nominator as well as
##   from the denominator)

sum((framData_base$HEARTRTE - mean_hr) ^ 2, na.rm =  TRUE) / 
  (sum(!is.na(framData_base$HEARTRTE)) - 1) 

## R-function ..................................................................

var(framData_base$HEARTRTE, na.rm =  TRUE) 


# Sample standard deviation ----------------------------------------------------

## Manually ....................................................................

sqrt(var(framData_base$HEARTRTE, na.rm =  TRUE)) 

## R-function ..................................................................

sd_hr <- sd(framData_base$HEARTRTE, na.rm =  TRUE) 
sd_hr 


# Range ------------------------------------------------------------------------

## Manually ....................................................................

min_hr <- sort(framData_base$HEARTRTE)[1]

max_hr <- sort(framData_base$HEARTRTE)[length(framData_base$HEARTRTE) - 1]
# * The NA goes to the last position! 

cbind(min_hr, max_hr)

## R-functions .................................................................

range(framData_base$HEARTRTE, na.rm = TRUE) 
# or separately
min(framData_base$HEARTRTE, na.rm = TRUE) 
max(framData_base$HEARTRTE, na.rm = TRUE) 

# IQR --------------------------------------------------------------------------
## R-functions .................................................................

IQR(framData_base$HEARTRTE, na.rm = TRUE) 


# An easy way to obtain (most of) these statistics, AND know about any missings: 
summary(framData_base$HEARTRTE)


```

#### 1.2. Distribution

Explore the distribution of heart rate graphically using a histogram. Is the distribution skewed? Can we assume that the heart rate is normally distributed?

```{r hist}
# In base R
hist(framData_base$HEARTRTE, breaks = 30, freq = FALSE,
     xlab = "beats/min", main = "Distribution of heart rate")
# We can add mean (red) and median (blue): abline draws a straight line from a to b 
# (or vertical as here)
abline(v = mean_hr, col = "red") 
abline(v = median_hr, col = "blue")


# OR using ggplot
ggplot(framData_base, aes(x=HEARTRTE)) + 
  geom_histogram(aes(y=after_stat(density))) +
  geom_vline(aes(xintercept=mean_hr), color="red") +
  geom_vline(aes(xintercept=median_hr), color="blue")
  

```

The distribution of heart rate is not skewed, since the sample mean and the median are almost equal to each other. Because of this feature and also because of the shape of the histogram, we can assume that the underlying distribution of the heart rate is the normal distribution.

## Exercise 2

Assuming that heart rate is normally distributed with mean = 75.89104 beats/min and standard deviation = 12.11364 beats/min, calculate the following probabilities for a randomly selected participant of the Framingham heart study:

-   probability of having heart rate greater than or equal to 40 beats/min
-   probability of having heart rate lower than or equal to 50 beats/min
-   probability of having heart rate between 60 and 100 beats/min

```{r probabilities}

# Probability of having heart rate greater than or equal to 40 beats/min? ......

zValue40 <- (40 - mean_hr) / sd_hr
1-pnorm(zValue40) # pnorm by default calculates the lower tail of the standard normal
pnorm(zValue40, lower.tail = FALSE) 
# alternatively: 
pnorm(40, mean=mean_hr, sd=sd_hr, lower.tail=FALSE)

# Probability of having heart rate lower than or equal to 50 beats/min? ........

zValue50 <- (50 - mean_hr) / sd_hr
pnorm(zValue50) 
# alternatively: 
pnorm(50, mean=mean_hr, sd=sd_hr)


# Probability of having heart rate between 60 and 100 beats/min? ...............

zValue60 <- (60 - mean_hr) / sd_hr
zValue100 <- (100 - mean_hr) / sd_hr

probLowerEqual60 <- pnorm(zValue60) 
probLowerEqual100 <- pnorm(zValue100) 

probLowerEqual100 - probLowerEqual60 


```

## Exercise 3

Calculate the 95% confidence interval (CI) for the mean heart rate.

### 3.1. Using central limit theorem (normal approximation)

```{r CI_norm}

# We firstly need to calculate the standard error of the mean 

SE_hr <- 
  sd_hr / sqrt(length(which(!is.na(framData_base$HEARTRTE)))) 


zValue <- qnorm(0.975)

lowerCI_mean_hr <- mean_hr - zValue * SE_hr

upperCI_mean_hr <- mean_hr + zValue * SE_hr

cbind(mean_hr, lowerCI_mean_hr, upperCI_mean_hr)


```

### 3.2. Using Student's t-distribution (exact CI)

```{r CI_t}

n <- length(which(!is.na(framData_base$HEARTRTE)))

tQuantile <- qt(p = 0.975, df =  n - 1)

lowerCI_mean_hr <- mean_hr - tQuantile * SE_hr

upperCI_mean_hr <- mean_hr + tQuantile * SE_hr

cbind(mean_hr, lowerCI_mean_hr, upperCI_mean_hr)


```

We observe that the CIs constructed using the two methods are almost identical. This is because we have a big sample of 4,434 study participants, and the normal approximation performs as good as the t-distribution.

## Exercise 4

We would like to explore the heart rate of non-diabetics and diabetics.

### 4.1. Graphical comparison

Explore the differences in the heart rates of non-diabetics and diabetics graphically using a boxplot.

```{r boxplot_diabVSnondiab}
# lets first code DIABETES as a factor
framData_base <- framData_base |> 
  mutate(DIABETES =factor(DIABETES, levels=c(0,1),labels=c("not diabetic","diabetic")))

boxplot(framData_base$HEARTRTE ~ framData_base$DIABETES, xlab = "",
        ylab = "heart rate")


# Or using ggplot
ggplot(framData_base, aes(y=HEARTRTE, groups=DIABETES)) + 
  geom_boxplot() +
  scale_x_discrete() 
  


```

Additionally, plot the distributions of the heart rates separately for non-diabetics and diabetics.

```{r hists_diabVSnondiab}

# Sample group means and medians ---------------------------------------------

mean_hr_diab0 <- mean(framData_base$HEARTRTE[framData_base$DIABETES == "not diabetic"],
                      na.rm = TRUE)
median_hr_diab0 <- median(framData_base$HEARTRTE[framData_base$DIABETES == "not diabetic"],
                          na.rm = TRUE)
mean_hr_diab1 <- mean(framData_base$HEARTRTE[framData_base$DIABETES == "diabetic"],
                      na.rm = TRUE)
median_hr_diab1 <- median(framData_base$HEARTRTE[framData_base$DIABETES == "diabetic"],
                          na.rm = TRUE)

# Histograms -------------------------------------------------------------------
par(mfrow = c(1, 2))

hist(framData_base$HEARTRTE[framData_base$DIABETES == "not diabetic"], breaks = 30, 
     freq = FALSE, main = "", xlab = "non-diabetics")
abline(v = mean_hr_diab0, col = "red")
abline(v = median_hr_diab0, col = "blue")

hist(framData_base$HEARTRTE[framData_base$DIABETES == "diabetic"], breaks = 30, 
     freq = FALSE, main = "",  xlab = "diabetics")
abline(v = mean_hr_diab1, col = "red")
abline(v = median_hr_diab1, col = "blue")

# or using ggplot
ggplot(framData_base, aes(x=HEARTRTE, color=DIABETES)) + 
  geom_histogram(aes(y=after_stat(density)), fill="white") +
  facet_wrap(~DIABETES)


```

### 4.2. Difference in sample means

Calculate the difference between the sample mean heart rates of non-diabetics and diabetics along with its 95% CI, assuming normality and equality of variances across the groups of non-diabetics and diabetics. Check the variances first to see whether they are similar. 

The formula for the SE or a difference in this case (equal variances) is 

$$ SE_D=s_{p}\cdot {\sqrt {{\frac {1}{n_{1}}}+{\frac {1}{n_{2}}}}} $$
where $s_p$ is the pooled standard deviation: 

$${\displaystyle s_{p}={\sqrt {\frac {\left(n_{1}-1\right)s_{X_{1}}^{2}+\left(n_{2}-1\right)s_{X_{2}}^{2}}{n_{1}+n_{2}-2}}}}$$



```{r hr_diabVSnondiab}

# Sample group variances -------------------------------------------------------
# * We calculated the means above

var_hr_diab0 <- var(framData_base$HEARTRTE[framData_base$DIABETES == "not diabetic"],
                    na.rm = TRUE)

var_hr_diab1 <- var(framData_base$HEARTRTE[framData_base$DIABETES == "diabetic"],
                    na.rm = TRUE)


# Sample size of the groups ----------------------------------------------------

n_diab0 <- sum(!is.na(framData_base$HEARTRTE[framData_base$DIABETES == "not diabetic"]))
n_diab1 <- sum(!is.na(framData_base$HEARTRTE[framData_base$DIABETES == "diabetic"]))

# CIs for the difference in group means ----------------------------------------

diff_mean_hr <- mean_hr_diab0 - mean_hr_diab1

var_diff_mean_hr <- 
  ((n_diab0 - 1) * var_hr_diab0 + (n_diab1 - 1) * var_hr_diab1) / 
  (n_diab0 + n_diab1 - 2)

SE_diff_mean_hr <- sqrt(var_diff_mean_hr) * sqrt(1/n_diab0 + 1/n_diab1) 


tQuantile_diff <- qt(p = 0.975, df = n_diab0 + n_diab1 - 2)

lowerCI_diff_mean_hr <- diff_mean_hr - tQuantile_diff * SE_diff_mean_hr

upperCI_diff_mean_hr <- diff_mean_hr + tQuantile_diff * SE_diff_mean_hr


cbind(diff_mean_hr, lowerCI_diff_mean_hr, upperCI_diff_mean_hr)

## Rounded to 3 decimal places
format(cbind(diff_mean_hr, lowerCI_diff_mean_hr, upperCI_diff_mean_hr), digits=4)

```

The mean heart rate is `r format(diff_mean_hr, digits=3)` beats/min lower in non-diabetics compared to diabetics. We are 95% confident that the true difference in the mean heart rates of non-diabetics and diabetics lies between`r format(lowerCI_diff_mean_hr, digits=3)` beats/min and `r format(upperCI_diff_mean_hr, digits=3)` beats/min.

### 4.3. Hypothesis testing (two sample t-test)

Perform a test to assess if the difference in the mean heart rates of non-diabetics and diabetics is zero. Calculate the test statistic and the p-value manually and using the R-function `t.test()`. Explore the function's argument `var.equal`.

```{r 2samplett}

# H0: diff_mean_hr = 0

## Manually ....................................................................

t_diff_mean_hr <- diff_mean_hr / SE_diff_mean_hr

2 * pt(abs(t_diff_mean_hr), df = n_diab0 + n_diab1 - 2, lower.tail = FALSE)

## R functions .................................................................

t.test(HEARTRTE ~ DIABETES, data = framData_base, var.equal = TRUE)

t.test(HEARTRTE ~ DIABETES, data = framData_base, var.equal = FALSE)


```

Both p-values (either assuming equal variances or not) show essentially the same results and strong evidence for a difference between the mean heart rate of non-diabetics and diabetics. 

## Exercise 5 (optional)

In this exercise we use the German breast cancer study data. We would like to explore how the mean tumor size (in mm) fluctuates according to the tumor's grade (I, II, III).

### 5.1. Graphical comparison

Explore tumor size according to the tumor grade graphically using a boxplot. Additionally, plot the distribution of tumor size across the different tumor grades.

```{r graphs_tsizetgrade}

boxplot(GBSG2$tsize ~ GBSG2$tgrade, ylab = "tumor size (mm)",
        xlab = "tumor grade")
points(GBSG2$tsize ~ GBSG2$tgrade)


# Calculation of sample group means and medians ................................

mean_tsize_tgradeI <- mean(GBSG2$tsize[GBSG2$tgrade == "I"])

mean_tsize_tgradeII <- mean(GBSG2$tsize[GBSG2$tgrade == "II"])

mean_tsize_tgradeIII <- mean(GBSG2$tsize[GBSG2$tgrade == "III"])


median_tsize_tgradeI <- median(GBSG2$tsize[GBSG2$tgrade == "I"])

median_tsize_tgradeII <- median(GBSG2$tsize[GBSG2$tgrade == "II"])

median_tsize_tgradeIII <- median(GBSG2$tsize[GBSG2$tgrade == "III"])


var_tsize_tgradeI <- var(GBSG2$tsize[GBSG2$tgrade == "I"])

var_tsize_tgradeII <- var(GBSG2$tsize[GBSG2$tgrade == "II"])

var_tsize_tgradeIII <- var(GBSG2$tsize[GBSG2$tgrade == "III"])


par(mfrow = c(1, 3))

hist(GBSG2$tsize[GBSG2$tgrade == "I"], breaks = 30, freq = FALSE,
     xlab = "grade I", main = "")
abline(v = mean_tsize_tgradeI, col = "red")
abline(v = median_tsize_tgradeI, col = "blue")

hist(GBSG2$tsize[GBSG2$tgrade == "II"], breaks = 30, freq = FALSE,
     xlab = "grade II", main = "")
abline(v = mean_tsize_tgradeII, col = "red")
abline(v = median_tsize_tgradeII, col = "blue")

hist(GBSG2$tsize[GBSG2$tgrade == "III"], breaks = 30, freq = FALSE,
     xlab = "grade III", main = "")
abline(v = mean_tsize_tgradeIII, col = "red")
abline(v = median_tsize_tgradeIII, col = "blue")


```

Only by checking the histograms of tumor size across the different tumor grades and the estimated sample group variances, we find evidence for a potential violation of the assumptions underlying anova. The distributions of tumor size across the different tumor grades seem slightly skewed (more skewed for tumor grade II). The sample variances of tumor size by tumor grade are also not equal.

### 5.2. Assess difference in means using ANOVA

Assuming normality of tumor size and equal variances across the different tumor grade groups, perform an analysis of variance to assess if the mean tumor size is the same across grades. Manually calculate the sum of squares, the F-statistic and its p-value. Compare the calculation with the output given by R-functions `anova()` and `aov()`.

```{r anova}

# Sums of squares --------------------------------------------------------------

mean_tsize <- mean(GBSG2$tsize)

SSwithin <- sum(
  sum((GBSG2$tsize[GBSG2$tgrade == "I"] - mean_tsize_tgradeI) ^ 2) + 
    sum((GBSG2$tsize[GBSG2$tgrade == "II"] - mean_tsize_tgradeII) ^ 2) +
          sum((GBSG2$tsize[GBSG2$tgrade == "III"] - mean_tsize_tgradeIII) ^ 2))

SStotal <- sum((GBSG2$tsize - mean_tsize) ^ 2)
  
SSbetween <- SStotal - SSwithin

  
# F-test -----------------------------------------------------------------------

k <- length(unique(GBSG2$tgrade))

Fstat <- (SSbetween / (k - 1)) / (SSwithin / (nrow(GBSG2) - k))

pf(Fstat, df1 = k - 1, df2 = nrow(GBSG2) - k, lower.tail = FALSE)


# anova ------------------------------------------------------------------------

anova(lm(tsize ~ tgrade, data = GBSG2))

# or

summary(aov(tsize ~ tgrade, data = GBSG2))

```

Using anova, we found evidence for a difference in the mean tumor sizes across the different tumor grades. Keep in mind though that the assumptions underlying anova might be violated in this example.
